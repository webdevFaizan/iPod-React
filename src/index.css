body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}


/* All Buttons related css is here. */
.buttons-container {
	width: 260px;
	height: 260px;
	border: 3px solid black;
	margin: 10px auto 0px auto;
	border-radius: 50%;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
    background-color: rgb(214, 214, 214);
    transition: transform ease-in-out 0.2s;
}
.center-circle {
	width: 50%;
	height: 50%;
	background-color: rgb(90, 90, 90);
	border-radius: inherit;
  /* border: 2px solid red; */
	display: flex;
	justify-content: center;
	align-items: center;
	color: white;
	outline: none;
	/* border: none; */
}

.menu-button {
	position: absolute;
	top: 0px;
	height: 25%;
	width: 50%;
	display: flex;
	justify-content: center;
  /* border: 2px solid red; */
	align-items: center;
	border-radius: 37% 37% 0% 0%;
	font-size: 30px;
  border: none;
	outline: none;
	
	background-color: transparent;
	color: rgb(78, 78, 78);
}
.left-button {
	position: absolute;
	left: 0px;
	width: 25%;
	height: 50%;
	display: flex;
  /* border: 2px solid red; */
	justify-content: center;
	align-items: center;
	border-radius: 37% 0% 0% 37%;
	font-size: 30px;
  border: none;
	outline: none;
	
	background-color: transparent;
	color: rgb(78, 78, 78);
}
.right-button {
	position: absolute;
	right: 0px;
	width: 25%;
	height: 50%;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 0% 37% 37% 0%;
	font-size: 30px;
  border: none;
	outline: none;
	
	background-color: transparent;
	color: rgb(78, 78, 78);
}
.play-pause {
	position: absolute;
	bottom: 0px;
	height: 25%;
	width: 50%;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 0px 0% 37% 37%;
	font-size: 30px;
	outline: none;	
  	border: none;
	background-color: transparent;
	color: rgb(78, 78, 78);
}


/* ------------ Screen Container -------------- */
.screen-container {
	width: 350px;	
	/* This height and width is predefined to make the image and the continer of this size. */
	height: 350px;
	margin: 10px auto;
	background-image: url("./peakpx.jpg");	
	/* IMPORTANT : This is a new way of importing the static images. */
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	overflow: hidden;
	position: relative;
	/* The position is set to be relative, so any children inside this class that would be having position as absolute will be with relation to this. */
    border-radius: 20px;
    transition: transform ease-in-out 0.2s;
}




/* --------------- Menu items --------------- */
.screen-menu {
	width: 0%;
	height: 100%;
	position: absolute;
	z-index: 5;
	left: 0%;
	background-color: white;
	/* box-shadow: none; */
	overflow-x: hidden;
	box-shadow: 5px 10px white;
	transition: width ease-in-out 0.2s;
	/* When ever the width of this item changes, then then this will be done with the help of transition, so an animation flow will be created.*/
}

.width-50 {
	width: 50% !important;
	/* The initial width of the item was set to be 0% but now the width is increased this means when ever we toggle between selecting and adding the width-50 element in the container then the width will be set and this when done with the help of transition, will create an animation effect. */
	box-shadow: 0px 0px 12px 1px rgb(82, 82, 82) !important;
}


/* Here I could have mentioned this class as the child class of screen-menu. Like this - .screen-menu > .selected but instead I just used the class directly, this will have no issue in this case, since the selected class is only present inside the .screen-menu */
.selected {
	background-color: rgb(157, 206, 24);
	color: white
}

/* The following is the child combinator, The > combinator selects nodes that are direct children of the first element. Syntax: A > B Example: ul > li will match all <li> elements that are nested directly inside a <ul> element. */
.screen-menu > div {
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 20%;
	border: 1px solid rgb(190, 190, 190);
	box-sizing: border-box;
	white-space: nowrap; /* to turn off text wrapping in the screen menu */
}



.screen-game {
	height: 100%;
	width: 100%;
	background-color: rgba(255, 255, 255, 0.9);
	box-sizing: border-box;
	overflow: hidden;
}